<?php

namespace Jose13\LaravelLineBotLottery\tests\EventsTypeTests\PostbackActionTypeTests;

use Exception;
use Jose13\LaravelLineBotLottery\Services\CrawlersService\TaiwanLottery\FiveThreeNine;

use Jose13\LaravelLineBotLottery\Services\Factory\TemplateTypeFactory;
use Jose13\LaravelLineBotLottery\Services\LineSupportEvents\EventsType\PostbackActionType\DateTimePickQuickAction;

use LINE\LINEBot;
use LINE\LINEBot\Event\BaseEvent;
use Tests\TestCase;
use Mockery;

class DateTimePickQuickActionTest extends TestCase
{

    /**
     * @var FiveThreeNine|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $FiveThreeNine;
    /**
     * @var LINEBot\Event\BaseEvent|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $BaseEvent;

    /**
     * @var TemplateTypeFactory|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $TemplateTypeFactory;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->TemplateTypeFactory = Mockery::mock(TemplateTypeFactory::class);
        $this->FiveThreeNine = Mockery::mock(FiveThreeNine::class);
        $this->BaseEvent = Mockery::mock(BaseEvent::class);

    }

    public function tearDown(): void
    {
        parent::tearDown();
        Mockery::close();
    }

    public function testGetResponseAndReturnNoBaLL()
    {

        $this->FiveThreeNine
            ->shouldReceive('getGameBallData')
            ->once()
            ->withAnyArgs()
            ->andReturn(
                [
                    [
                        '期別' => "999",
                        '開獎日期' => "110/08/02",
                        "最新累積頭獎金額" => "1000",
                        "本期頭獎單注獎金" => "500",
                    ]
                ]);

        $postbackArray = [
            "data" => "FiveThreeNine&full&26",
            "params" => [
                "date" => "2021-08-08"
            ]
        ];
        $this->BaseEvent->shouldReceive('getPostbackParams')
            ->once()
            ->andReturn($postbackArray['params']);


        $this->BaseEvent->shouldReceive('getPostbackData')
            ->once()
            ->andReturn($postbackArray['data']);



        $dateTimePickQuickAction = new DateTimePickQuickAction($this->BaseEvent,$this->FiveThreeNine,$this->TemplateTypeFactory);
        $dateTimePickQuickActionResponse = $dateTimePickQuickAction->getResponse();

        $this->assertEquals('no Ball',$dateTimePickQuickActionResponse[0]);

    }
}
