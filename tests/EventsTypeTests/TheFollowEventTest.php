<?php

namespace Jose13\LaravelLineBotLottery\tests\EventsTypeTests;

use Jose13\LaravelLineBotLottery\Services\LineSupportEvents\EventsType\TheJoinEvent;
use Jose13\LaravelLineBotLottery\Services\LineTemplateService\LineTemplateBuildService;
use LINE\LINEBot;
use LINE\LINEBot\Event\BaseEvent;
use LINE\LINEBot\Response;
use Mockery;
use Tests\TestCase;

class TheFollowEventTest extends TestCase
{

    /**
     * @var BaseEvent|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $baseEvent;
    /**
     * @var LINEBot|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $lINEBot;
    /**
     * @var LineTemplateBuildService|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $lineTemplateBuildService;
    /**
     * @var Response|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $response;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->lineTemplateBuildService = Mockery::mock(LineTemplateBuildService::class);
        $this->baseEvent = Mockery::mock(BaseEvent::class);
        $this->lINEBot = Mockery::mock(LINEBot::class);
        $this->response = Mockery::mock(Response::class);


    }

    public function tearDown(): void
    {
        parent::tearDown();
        Mockery::close();
    }

    public function testFollowEventGetReplyResultIsSuccess()
    {

        $this->lineTemplateBuildService->shouldReceive('createTextMessageBuilder')
            ->once();


        $this->baseEvent->shouldReceive('getReplyToken')
            ->once()
            ->andReturn('12345');

        $this->lINEBot->shouldReceive('replyMessage')
            ->once()
            ->andReturn($this->response);

        $this->response->shouldReceive('isSucceeded')
            ->once()
            ->andReturn('success');

        $joinEvent = new TheJoinEvent($this->baseEvent, 'UserChats', $this->lINEBot, $this->lineTemplateBuildService);
        $replyResult = $joinEvent->getReplyResult();

        $this->assertEquals('success',$replyResult);

    }
}
