<?php

namespace Jose13\LaravelLineBotLottery\tests\CrawlersServiceTests;

use Jose13\LaravelLineBotLottery\Services\CrawlersService\CrawlerService;
use Symfony\Component\DomCrawler\Crawler;
use Tests\TestCase;

use Mockery;

class CrawlerServiceTest extends TestCase
{
    private $crawlerService;



    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->crawlerService = Mockery::mock(CrawlerService::class);

    }

    public function tearDown(): void
    {
        parent::tearDown();
        Mockery::close();
    }

    public function testMakeDomParser()
    {
        $crawler = Mockery::mock(Crawler::class);

        $this->crawlerService->shouldReceive('makeDomParser')
            ->once()
            ->withAnyArgs();

        $this->crawlerService->domParser =$crawler;

        $this->crawlerService->makeDomParser('108', '02', 'any', 'any', 'any', 'any');

        $this->assertIsObject($this->crawlerService->domParser);

    }


    public function testGetDomParserResultByXPath()
    {
        $this->crawlerService->shouldReceive('getDomParserResultByXPath')
            ->once()
            ->with('//*[@id="D539Control')
            ->andReturn('02');

        $data = $this->crawlerService->getDomParserResultByXPath('//*[@id="D539Control');

        $this->assertSame("02", $data);

    }





}
